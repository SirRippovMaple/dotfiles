function move_config() {
    OLD_DIR="$1"
    NEW_DIR="$2"
    if [ -d "$OLD_DIR" ]; then
        [ ! -d "$NEW_DIR" ] && mkdir -p "$NEW_DIR" && mv "$OLD_DIR"/* "$NEW_DIR" && rm -rf "$OLD_DIR" || echo "Unable to move files from $OLD_DIR to $NEW_DIR."
    fi
}

function move_config_file() {
    OLD_LOCATION="$1"
    NEW_LOCATION="$2"
    if [ -f "$OLD_LOCATION" ]; then
        [ ! -f "$NEW_LOCATION" ] && mkdir -p "$(dirname "$NEW_LOCATION")" && mv "$OLD_LOCATION" "$NEW_LOCATION" || echo "Unable to move $OLD_LOCATION to $NEW_LOCATION."
    fi
}

export XDG_DATA_HOME=$HOME/.local/share
export XDG_CONFIG_HOME=$HOME/.config
export XDG_STATE_HOME=$HOME/.local/state
export XDG_CACHE_HOME=$HOME/.cache
export LC_ALL=en_US.UTF-8

export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc

export CARGO_HOME="$XDG_DATA_HOME/cargo"
move_config "$HOME/.cargo" "$CARGO_HOME"
[ -f "$CARGO_HOME/env" ] && . "$CARGO_HOME/env"

export CUDA_CACHE_PATH="$XDG_CACHE_HOME"/nv
move_config "$HOME/.nv" "$CUDA_CACHE_PATH"

export GOPATH="$XDG_DATA_HOME"/go
move_config "$HOME"/go "$GOPATH"

export MPLAYER_HOME="$XDG_CONFIG_HOME"/mplayer
move_config "$HOME"/.mplayer "$MPLAYER_HOME"

export NUGET_PACKAGES="$XDG_CACHE_HOME"/NuGetPackages
rm -rf "$HOME"/.nuget/packages

export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
move_config "$HOME"/.rustup "$RUSTUP_HOME"

export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
move_config "$HOME/.docker" "$XDG_CONFIG_HOME/docker"

export GNUPGHOME="$XDG_DATA_HOME/gnupg"
move_config "$HOME/.gnupg" "$XDG_DATA_HOME/gnupg"

move_config "$HOME/.dosbox" "$XDG_CONFIG_HOME/dosbox"
move_config_file "$HOME/.notmuch-config" "$XDG_CONFIG_HOME/notmuch/default/config"

export WINEPREFIX="$XDG_DATA_HOME/wine"
move_config "$HOME/.wine" "$XDG_DATA_HOME/wine"

export W3M_DIR="$XDG_DATA_HOME/w3m"
move_config "$HOME/.w3m" "$XDG_DATA_HOME/w3m"

export VAGRANT_HOME="$XDG_DATA_HOME/vagrant"
move_config "$HOME/.vagrant.d" "$XDG_DATA_HOME/vagrant"

move_config "$HOME/.visidata" "$XDG_DATA_HOME/visidata"

export TEXMFVAR="$XDG_CACHE_HOME/texlive/texmf-var"
move_config "$HOME/.texlive/texmf-var" "$XDG_CACHE_HOME/texlive/texmf-var"

export INPUTRC="$XDG_CONFIG_HOME/readline/inputrc"
move_config_file "$HOME/.inputrc" "$XDG_CONFIG_HOME/readline/inputrc"

move_config_file "$HOME/.pulse-cookie" "$XDG_CONFIG_HOME/pulse/cookie"

# Prepended path
[ -d /usr/local/go/bin ] && export PATH="/usr/local/go/bin:$PATH"
[ -d $HOME/tools ] && export PATH="$HOME/tools:$PATH"
[ -d $HOME/scripts ] && export PATH="$HOME/scripts:$PATH"
[ -d /usr/local/share/dotnet ] && export PATH="/usr/local/share/dotnet:$PATH"
[ -d /usr/local/bin ] && export PATH="/usr/local/bin:$PATH"

# Appended path
[ -d $GOPATH/bin ] && export PATH="$PATH:$GOPATH/bin"
[ -d $HOME/.dotnet/tools ] && export PATH="$PATH:$HOME/.dotnet/tools"
[ -d $HOME/repositories/useful-scripts ] && export PATH="$PATH:$HOME/repositories/useful-scripts"
[ -d $HOME/.local/bin ] && export PATH="$PATH:$HOME/.local/bin"
[ -f $HOME/.local/share/cargo/env ] && source "$HOME/.local/share/cargo/env"

{{ if eq .os "darwin" -}}
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
{{ else -}}
export SSH_AUTH_SOCK=~/.1password/agent.sock
{{ end -}}
