#!/usr/bin/env /bin/bash

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

tags=$(echo -e "CUSTOM\nEND" | cat "$script_dir/tags.txt" -)
names=$(echo -e "OTHER" | cat "$script_dir/names.txt" -)

read -r -d '' months <<'EOF'
01,01 - January
02,02 - February
03,03 - March
04,04 - April
05,05 - May
06,06 - June
07,07 - July
08,08 - August
09,09 - September
10,10 - October
11,11 - November
12,12 - December
NO,NO MONTH
EOF

read -r -d '' years <<'EOF'
2023
2022
2021
2020
2019
2018
2017
2016
2015
2014
2013
2012
2011
2010
OTHER
NO DATE
EOF

set -Eeuo pipefail

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

prompt_yesno() {
    var=$2
    message=$1
    msg "$message"
    read -p "[yn] >" -e -n 1 -r $var
    reply=$(eval "echo \${$var}")
    case $reply in
        [Yy]* ) ;;
        [Nn]* ) ;;
        * ) 
            msg "Please answer yes or no."
            prompt_yesno "$var" "$message"
            ;;
    esac
}

read_tag() {
  msg "Tags so far: ${BLUE}${full_tags[*]}${NOFORMAT}"
  msg "${YELLOW}Please select a tag${NOFORMAT}"
  tag=$(echo "$tags" | fzf)

  if [ "$tag" == "END" ]; then
      return
  fi

  if [ "$tag" == "CUSTOM" ]; then
      msg "${YELLOW}Enter custom tag${NOFORMAT}"
      read -e -p "> " tag
      prompt_yesno "Store tag?" yn
      if [[ $yn =~ ^[Yy]$ ]]; then
          echo "$tag" >> "$script_dir/tags.txt"
          cat "$script_dir/tags.txt" | sort | uniq | sponge "$script_dir/tags.txt"
      fi
  fi

  full_tags+=("$tag")
  read_tag
}

read_date() {
    msg "${YELLOW}Select year${NOFORMAT}"
    year=$(echo "$years" | fzf)

    if [ "$year" == "NO DATE" ]; then
        full_tags=()
        return
    fi

    if [ "$year" == "OTHER" ]; then
      msg "${YELLOW}Enter custom year${NOFORMAT}"
      read -e -p "> " year 
    fi

    msg "${YELLOW}Select month${NOFORMAT}"
    month=$(echo "$months" | fzf --with-nth=2 --delimiter=',' | cut -f1 -d,)

    if [ "$month" == "NO" ]; then
        full_tags=("${year}")
        return
    fi

    full_tags=("${year}${month}")
}

read_name() {
    msg "${YELLOW}Select file name${NOFORMAT}"
    name=$(printf "$basename\n$names" | fzf)
    
    if [ "$name" == "OTHER" ]; then
        msg "Source file: $basename"
        msg "${YELLOW}Enter a new file name (without extension)${NOFORMAT}"
        read -e -p "> " name
        prompt_yesno "Store name?" yn
        if [[ $yn =~ ^[Yy]$ ]]; then
            echo "$name" >> "$script_dir/names.txt"
            cat "$script_dir/names.txt" | sort | uniq | sponge "$script_dir/names.txt"
        fi
    fi
}

setup_colors

file="$1"
[ ! -f "$file" ] && die "Cannot find file $file"
basename=$(basename -- "$file")
extension="$([[ "$basename" = *.* ]] && echo ".${basename##*.}" || echo '')"
basename="${basename%.*}"

read_date
read_tag
read_name

newfile="$HOME/tagspaces/reference/${name}[${full_tags[*]}]${extension}"
msg "${YELLOW}${file}${NOFORMAT} -> ${YELLOW}${newfile}${NOFORMAT}"
mv "$file" "$newfile"
