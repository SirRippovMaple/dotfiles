umask 027

mkdir -p "$XDG_DATA_HOME/zsh"
mkdir -p "$XDG_CACHE_HOME/zsh"

# No beeps
unsetopt BEEP

# GPG agent
if [ -x "$(command -v gpg-agent)" ]; then
    unset SSH_AGENT_PID
    export GPG_TTY=$(tty)
    export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
    gpgconf --launch gpg-agent
fi

# Basic auto/tab complete:
autoload -Uz compinit
compinit -d -"$XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION"
_comp_options+=(globdots)
[ -d $XDG_CONFIG_HOME/zsh/functions ] && fpath=($XDG_CONFIG_HOME/zsh/functions $fpath)

#
# Dependencies
#

export ANTIDOTE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}/antidote"
source "${ZDOTDIR:-~}/.antidote/antidote.zsh"
antidote load

# User configuration
batcmd=bat

export AUTO_NOTIFY_THRESHOLD=20
export EDITOR="vim"

if [ -x "$(command -v nvim)" ]; then
  export PAGER="nvim -c 'setlocal noswapfile buftype=nofile bufhidden=hide' -c 'setlocal nomodified readonly nomodifiable' -c 'setlocal noexpandtab tabstop=8 softtabstop=8 shiftwidth=8' -c 'setlocal number norelativenumber' -c 'setlocal foldcolumn=0 colorcolumn=0 nolist nofoldenable' -c 'nnoremap <silent> <buffer> <nowait> q :lclose<CR>:q<CR>' -c 'nnoremap <silent> <buffer> j gj' -c 'nnoremap <silent> <buffer> k gk'"
  export EDITOR="nvim"
  alias vim=nvim
  export MANPAGER='nvim +Man!'
fi

if [ -x "$(command -v direnv)" ]; then
  eval "$(direnv hook zsh)"
fi
if [ -x "$(command -v git)" ]; then
  alias g=git
  alias gti=git
fi
if [ -x "$(command -v gh)" ]; then
  alias gh='PAGER=less gh'
fi

if [ -x "$(command -v kubectl)" ]; then
  alias k=kubectl
  export KUBE_EDITOR=$EDITOR
fi

if [ -x "$(command -v bw)" ]; then
  alias unlock='export BW_SESSION=$(~/scripts/unlocker)'
  alias lock='bw lock'
fi

if [ -x "$(command -v eza)" ]; then
  alias ls=eza
elif [ -x "$(command -v exa)" ]; then
  alias ls=exa
fi

if [ -x "$(command -v $batcmd)" ]; then
  export BAT_PAGER="less"
  alias cat=$batcmd
fi

if [ -x "$(command -v zoxide)" ]; then
  eval "$(zoxide init zsh)"
fi

if [ -x "$(command -v irssi)" ]; then
  alias irssi=irssi --config="$XDG_CONFIG_HOME"/irssi/config --home="$XDG_DATA_HOME"/irssi
fi

if [ -x "$(command -v ncmpcpp)" ]; then
  alias music=ncmpcpp
fi

alias update='source ~/.zshrc'
{{- if eq .chezmoi.os "darwin" }}
alias start=open
{{- else }}
alias start=xdg-open
{{- end }}

{{- if ne .chezmoi.os "darwin" }}
if [ -x "$(command -v xclip)" ]; then
  alias pbcopy='xclip -selection clipboard'
  alias pbpaste='xclip -selection clipboard -o'
fi
{{- end }}

[ -x "$(command -v todo.sh)" ] && alias t=todo.sh
alias b='${EDITOR} ~/todo/bookmarks.txt'

# Aliases
alias cd..='cd ..'
alias pwd='pwd && pwd | pbcopy'
alias portkill='function killit(){kill -9 "$(lsof -t -i:$1)" &>/dev/null || true};killit'

# Work folders
[ -f ~/.folders.sh ] && source ~/.folders.sh

# To customize prompt, run `p10k configure` or edit $ZDOTDIR/.p10k.zsh.
[[ ! -f ${ZDOTDIR:-~}/.p10k.zsh ]] || source ${ZDOTDIR:-~}/.p10k.zsh

enable-fzf-tab

# Open the Pull Request URL for your current directory's branch (base branch defaults to master)
function openpr() {
  backup_remote=$(git remote | grep --quiet --no-messages '^upstream$' && echo -n upstream || echo -n origin)
  remote=${1:-$backup_remote}
  github_url=`git remote -v | awk "/^${remote}.*\\(fetch\\)$/{print \\$2}" | sed -Ee 's#(git@|git://)#https://#' -e 's#github.com-[^:]+#github.com#' -e 's@com:@com/@' -e 's%\.git$%%'`;
  main_branch=`git remote show $remote | sed -n '/HEAD branch/s/.*: //p'`
  branch_name=`git symbolic-ref HEAD | cut -d"/" -f 3,4`;
  if [ "$remote" = "upstream" ]; then
    branch_name="trevor-green:$branch_name"
  fi
  pr_url=$github_url"/compare/$main_branch..."$branch_name
  open $pr_url;
}

function pruneBranches() {
  git fetch -p && for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done
}

function merge() {
  git ls-files -u | awk '{print $4}' | sort -u | xargs -o vim
}

function clean build dbmigrate () {
  if [[ -x ./build.sh ]]; then
    ./build.sh -target=$0 $*
  else
    command $0 "$@"
  fi
}

function up() {
  down
  docker compose up -d
  echo "pushd \"$(pwd)\"" > /tmp/dc-down
  echo "docker compose down" >> /tmp/dc-down
  echo "popd" >> /tmp/dc-down
  chmod +x /tmp/dc-down
}

function down() {
  if [[ -x /tmp/dc-down ]]; then
    source /tmp/dc-down
    rm /tmp/dc-down
  fi
}
